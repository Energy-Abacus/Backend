# database config
# mysql config
quarkus.datasource.jdbc.url = jdbc:mysql://${mysql-url:localhost}:3306/${mysql-database:quarkus}
quarkus.datasource.db-kind = mysql
quarkus.datasource.username = ${mysql-user:quarkus}
quarkus.datasource.password = ${mysql-password:quarkus}
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.database.generation = drop-and-create

# influxdb config
influxdb.url=http://${influx-url:localhost}:8086
influxdb.token=${influx-token:0}
influxdb.org=${influx-org:0}
influxdb.bucket=${influx-bucket:measurement}

# swagger / openapi config
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.urls.local=/q/openapi
quarkus.swagger-ui.urls.prod=https://student.cloud.htl-leonding.ac.at/e.gstallnig/abacus/${URL_PREFIX}/q/openapi
quarkus.swagger-ui.urls-primary-name=prod
quarkus.smallrye-openapi.security-scheme=jwt

# github-account-name
quarkus.container-image.group=energy-abacus
quarkus.container-image.name=backend
quarkus.container-image.tag=${URL_PREFIX}

# CORS settings
quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:4200

# kubernetes prefix
quarkus.kubernetes.name=abacus-backend-${URL_PREFIX}

# LeoCloud namespace
quarkus.kubernetes.namespace=student-e-gstallnig

# docker registry
quarkus.container-image.registry=ghcr.io
quarkus.container-image.push=false

# ingress
quarkus.kubernetes.ingress.expose=true
quarkus.kubernetes.ingress.host=student.cloud.htl-leonding.ac.at
quarkus.kubernetes.ingress.annotations."nginx.ingress.kubernetes.io/rewrite-target"=/$1
# leocloud-prefix
quarkus.kubernetes.ports.http.path=/e.gstallnig/abacus/${URL_PREFIX}/(.*)$

# kubernetes options
%prod.quarkus.kubernetes-config.secrets.enabled=true
#%prod.quarkus.kubernetes-config.enabled=true
%prod.quarkus.kubernetes-config.secrets=mysql-secret,auth0-secret,influxdb-secret

# Oidc auth config for resource server
quarkus.oidc.auth-server-url=https://dev-3adocs3bconafo8d.us.auth0.com
quarkus.oidc.client-id=${auth0_client_id}
quarkus.oidc.credentials.secret=${auth0_secret}
quarkus.oidc.token.audience=Quarkus-Backend-Abacus
#quarkus.oidc.application-type=

# Auth0 management API config
auth0.management-api-url=https://dev-3adocs3bconafo8d.us.auth0.com
auth0.management-api-audience=https://dev-3adocs3bconafo8d.us.auth0.com/api/v2/
auth0.management-api-client-id=${auth0_management_client_id: }
auth0.management-api-client-secret=${auth0_management_secret: }

# db prod config
%prod.quarkus.datasource.jdbc.url = jdbc:mysql://mysql/${database-name}
%prod.quarkus.datasource.db-kind = mysql
%prod.quarkus.datasource.username = ${username}
%prod.quarkus.datasource.password = ${password}
%prod.quarkus.hibernate-orm.log.sql=false
%prod.quarkus.hibernate-orm.database.generation = update

# db test config
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:test
%test.quarkus.datasource.username=admin
%test.quarkus.datasource.password=admin
%test.quarkus.hibernate-orm.database.generation=create
%test.quarkus.hibernate-orm.database.generation.create-schemas=true

%test.quarkus.hibernate-orm.log.sql=true
%test.influxdb.loglevel=BODY

%test.influxdb.url=http://${influx-url:localhost}:8086
%test.influxdb.token=my-super-secret-auth-token
%test.influxdb.org=abacustesting
%test.influxdb.bucket=dummy
